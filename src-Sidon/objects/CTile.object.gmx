<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    sprite_index = res_msk_tile;

    // Pathfinding
    myParent = noone;

    // Flag
    myFlag[REACHABLE] = false; // Reachable
    myFlag[ATTACKABLE] = false; // Attackable
    myFlag[ALLY_OCCUPIES] = false; // Ally  unit occupies this tile
    myFlag[ENEMY_OCCUPIES] = false; // Enemy unit occupies this tile

    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Visibility
    if (!myFlag[REACHABLE] &amp; !myFlag[ATTACKABLE]) {
        visible = false;
    } else {
        visible = true;
    }

    // Colour
    image_index = (myFlag[REACHABLE] + myFlag[ATTACKABLE] * 2) - 1;

    if (myFlag[ALLY_OCCUPIES]) {
        image_index = 2;
    }

    if (myFlag[ENEMY_OCCUPIES]) {
        //image_index = 1;
    }
    
    if (CGame.myPhase == 1) {
        if (CGame.state_index != stateScene_Update and
            CGame.state_index != stateSystem_Prompt) {
            if (ds_grid_get(CMap.myMap[SPAWN_MAP], myX, myY) == true) {
                visible = true;
                image_index = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (visible) {
        draw_sprite(sprite_index, image_index, x, y - z - TILE_HEIGHT);
        if (CGame.myPhase == 1) {
            if (CGame.state_index != stateScene_Update and
                CGame.state_index != stateSystem_Prompt) {
                if (ds_grid_get(CMap.myMap[SPAWN_MAP], myX, myY)) {
                    draw_sprite(res_msk_tile, 0, x, y - z - TILE_HEIGHT);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
