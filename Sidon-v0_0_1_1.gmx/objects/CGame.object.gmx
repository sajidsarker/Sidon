<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    audio_play_sound(res_bgm_battle1, 1, true);

    // Debug
    show_debug_overlay(true);

    // Cache
    myCache = ds_list_create();

    // Scene
    SceneTimer = 0;

    // Input
    //globalvar myInput;
    myKeyboard   = CKeyboard;
    myGamepad    = CGamepad;
    myController = CController * (instance_exists(CController));
    myInput = myKeyboard;

    // FSM
    /*
        Update
            - Movement
            - Attack
        Cutscene
        Pause
        Game Won
        Game Lost
    */
    fsm_createStateMachine(stateSystem_Update);

    // Turn
    myTurn = true;

    // Faction
    myFaction = 0;


    // Map
    myMap = instance_create(0, 0, CMap);
    
    // Cursor
    myCursor = instance_create(0, 0, CCursor);

    // Camera
    myCamera = instance_create(0, 0, CCamera);


    // Roleplaying Systems
    if (!instance_exists(CClan)) {
        myClan = instance_create(0, 0, CClan);
    } else {
        myClan = CClan;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    background_y[0] = view_yview[0];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    background_y[0] = view_yview[0];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // FSM
    fsm_updateStateMachine(state_index);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Garbage Collection
    audio_stop_sound(res_bgm_battle1);
    ds_list_destroy(myCache);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (state_index == stateSystem_Pause) {
        draw_set_alpha(0.5);
        draw_set_colour(c_deepblue);
        draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
        draw_set_alpha(1);
        DrawHeading(16, 32, 128, "Pause", true);
        DrawString(16, 52, 32, "[!]", "Press [Start] to resume the game.");
        if (myGamepad.isControllerConnected) {
            DrawHeading(16, 72, 128, "Input Device", true);
            DrawString(16, 92, 32, "[!]", "Currently logging " + string(gamepad_get_description(myController.pad_num)) + ".");
        } else {
            DrawHeading(16, 72, 128, "Input Device", true);
            DrawString(16, 92, 32, "[!]", "Currently logging Default Keyboard.");
        }
    }

    if (state_index == stateSystem_Update) {
        draw_set_colour(c_black);
        draw_set_font(Font_H1);
        draw_text(view_wport[0] - 64, 32, CCursor.vecPosition[| Z]);
        DrawValue(view_wport[0] - 70, 44, 0, "Elevation");

        DrawHeading(16, 32, 128, "Camera", true);
        DrawVariable(16, 48 + 4, 128, "Position X: ", myCursor.vecPosition[| X]);
        DrawVariable(16, 64 + 4, 128, "Position Y: ", myCursor.vecPosition[| Y]);
        DrawVariable(16, 80 + 4, 128, "Position Z: ", myCursor.vecPosition[| Z]);
        DrawVariable(16, 96 + 4, 128, "Camera X: ", myCursor.x);
        DrawVariable(16, 112 + 4, 128, "Camera Y: ", myCursor.y);
        DrawVariable(16, 128 + 4, 128, "Camera Z: ", myCursor.z);

        DrawHeading(16, 128 + 24, 128, "Map", true);
        DrawVariable(16, 128 + 32 + 12, 128, "Width: ", myMap.myWidth);
        DrawVariable(16, 128 + 48 + 12, 128, "Height: ", myMap.myHeight);
        DrawVariable(16, 128 + 64 + 12, 128, "Tile Count: ", instance_number(CTile));
        DrawVariable(16, 128 + 80 + 12, 128, "Tile Width: ", TILE_WIDTH);
        DrawVariable(16, 128 + 96 + 12, 128, "Tile Height: ", TILE_HEIGHT);

        DrawHeading(16, 128 + 96 + 32, 128, "Input Devices", true);
        DrawVariable(16, 128 + 124 + 24, 128, "Keyboard: ", myKeyboard);
        if (myGamepad.isControllerConnected) {
            DrawVariable(16, 128 + 140 + 24, 128, "Gamepad: ", myGamepad);
        } else {
            DrawVariable(16, 128 + 140 + 24, 128, "Gamepad: ", "No");
        }
        DrawVariable(16, 128 + 156 + 24, 128, "Gamepad Count: ", instance_number(CController));
    }

    DrawFooter("Beirut Engine - v0.0.1");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
