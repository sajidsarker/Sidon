<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    show_debug_overlay(false);

    myX = 0;
    myY = 0;
    sizeBrush = 0;

    /*
    window_set_size(464, 400);
    view_wview[0] = 464;
    view_hview[0] = 400;
    view_wport[0] = 464;
    view_hport[0] = 400;
    */
    view_xview[0] = -128;

    myGrid = ds_grid_create(25, 25);
    ds_grid_set_region(myGrid, 0, 0, 24, 24, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Brush Size
    sizeBrush += keyboard_check_pressed(vk_up) - keyboard_check_pressed(vk_down);

    if (sizeBrush &lt; 0) {
        sizeBrush = 0;
    }
    if (sizeBrush &gt; 24) {
        sizeBrush = 24;
    }

    // Camera
    view_xview[0] += TILE_HEIGHT * (keyboard_check_pressed(ord("D")) - keyboard_check_pressed(ord("A")));
    view_yview[0] += TILE_HEIGHT * (keyboard_check_pressed(ord("S")) - keyboard_check_pressed(ord("W")));

    // Cursor Coordinates
    myX = floor(mouse_x / TILE_HEIGHT);
    myY = floor(mouse_y / TILE_HEIGHT);

    // Height Mapping
    if ((myX &gt; -1 and myX &lt; 25) and (myY &gt; -1 and myY &lt; 25)) {
        if (mouse_check_button_pressed(mb_left)) {
            ds_grid_add_region(myGrid, myX - ceil(sizeBrush * 0.5), myY - ceil(sizeBrush * 0.5), myX + ceil(sizeBrush * 0.5), myY + ceil(sizeBrush * 0.5), 1);
        }    
        if (mouse_check_button_pressed(mb_right)) {
            ds_grid_add_region(myGrid, myX - ceil(sizeBrush * 0.5), myY - ceil(sizeBrush * 0.5), myX + ceil(sizeBrush * 0.5), myY + ceil(sizeBrush * 0.5), -1);
        }
    }

    // Height Clamping
    var i, j;

    for (j=0; j&lt;25; j++) {
        for (i=0; i&lt;25; i++) {
            myGrid[# i, j] = max(1, min(myGrid[# i, j], 32));
        }
    }

    // Copy
    if (keyboard_check_pressed(vk_enter)) {
        keyboard_string = "";
        clipboard_set_text("");
        clipboard_set_text(ds_grid_write(myGrid));
    }

    // Clear
    if (keyboard_check_pressed(vk_backspace)) {
        keyboard_string = "";
        clipboard_set_text("");
        clipboard_set_text(ds_grid_write(myGrid));
        ds_grid_clear(myGrid, 1);
    }

    // Paste
    if (keyboard_check_pressed(vk_space)) {
        keyboard_string = "";
        ds_grid_clear(myGrid, 1);
        ds_grid_read(myGrid, clipboard_get_text());
    }

    // Exit
    if (keyboard_check_pressed(vk_escape)) {
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    ds_grid_destroy(myGrid);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Panel
    DrawCanvas(0, 0, 128, view_hport[0] - 20);
    DrawHeading(4, 4, 120, "Disp.", true);
    DrawVariable(4, 20, 120, "FPS", fps);
    DrawVariable(4, 36, 120, "Brush Size", sizeBrush + 1);
    DrawVariable(4, 52, 120, "Cursor X", myX);
    DrawVariable(4, 68, 120, "Cursor Y", myY);
    DrawHeading(4, 84, 120, "Tools", true);
    DrawVariable(4, 100, 120, "Save", "Enter");
    DrawVariable(4, 116, 120, "Load", "Space");
    DrawVariable(4, 132, 120, "Clear", "Backspace");
    DrawVariable(4, 148, 120, "Brush +", "^");
    DrawVariable(4, 164, 120, "Brush -", "`");
    DrawVariable(4, 180, 120, "Camera", "WASD");
    DrawFooter("Beirut Engine Leveledit - v0.1.1");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Canvas
    draw_set_colour(c_ltgray);
    draw_rectangle(0, 0, 25 * TILE_HEIGHT, 25 * TILE_HEIGHT, false);

    // Cursor
    var i, j;

    if ((myX &gt; -1 and myX &lt; 25) and (myY &gt; -1 and myY &lt; 25)) {
        for (j = max(0, myY - ceil(sizeBrush * 0.5)); j &lt;= min(24, myY + ceil(sizeBrush * 0.5)); j++) {
            for (i = max(0, myX - ceil(sizeBrush * 0.5)); i &lt;= min(24, myX + ceil(sizeBrush * 0.5)); i++) {
                draw_sprite(res_spr_ui4, 0, i * TILE_HEIGHT, j * TILE_HEIGHT);
            }
        }
    }

    draw_set_colour(c_teal);
    draw_set_font(Font_P);

    for (j=0; j&lt;25; j++) {
        for (i=0; i&lt;25; i++) {
            if (myGrid[# i, j] != 1) {
                draw_text(i * TILE_HEIGHT, j * TILE_HEIGHT, myGrid[# i, j] - 1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
