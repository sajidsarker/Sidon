<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    instance_create(0, 0, TFadeIn);
    //audio_play_sound(res_bgm_mainmenu, 1, true);
    show_debug_overlay(false);

    // Input
    globalvar myInput;

    if (!instance_exists(CKeyboard)) {
        myKeyboard = instance_create(0, 0, CKeyboard);
    } else {
        myKeyboard = CKeyboard;
    }
    if (!instance_exists(CGamepad)) {
        myGamepad = instance_create(0, 0, CGamepad);
    } else {
        myGamepad = CGamepad;
    }
    if (!instance_exists(CController)) {
        myController = noone;
    } else {
        myController = CController;
    }

    myInput = myKeyboard;

    // Timer
    theTimer = 0;

    // Menu
    theMenu = ds_list_create();
    ds_list_add(theMenu, "Play");
    ds_list_add(theMenu, "Guide");
    ds_list_add(theMenu, "Credits");
    ds_list_add(theMenu, "Settings");
    ds_list_add(theMenu, "Quit");
    theChoice = 0;

    // Finite State Machine
    fsm_createStateMachine(stateMainMenu_PressStart);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Finite State Machine
    fsm_updateStateMachine(state_index);

    if (keyboard_check_pressed(vk_anykey)) {
        if (string_lower(string_copy(keyboard_string, string_length(keyboard_string) - 9, 9)) == "leveledit") {
            room_goto(BEIRUT_ENGINE_LEVELEDIT);
        }
    }

    /*
    if (keyboard_check_pressed(vk_enter)) {
        keyboard_string = "";
        clipboard_set_text("");
        var s = clipboard_get_text();
        var temp = ds_grid_create(STATS_NUM, 1);
        ds_grid_set_region(temp, 0, 0, STATS_NUM - 1, 0, 0);
        f = file_text_open_write("unisav.txt");
        file_text_write_real(f, 1);
        clipboard_set_text("1#");
        file_text_write_real(f, ds_grid_width(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_grid_width(temp)) + "#");
        file_text_write_real(f, ds_grid_height(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_grid_height(temp)) + "#");
        file_text_write_string(f, ds_grid_write(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_grid_write(temp)) + "#");
        ds_grid_destroy(temp);
        temp = ds_list_create();
        file_text_write_string(f, ds_list_write(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_list_write(temp)) + "#");
        file_text_write_string(f, ds_list_write(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_list_write(temp)) + "#");
        file_text_write_string(f, ds_list_write(temp));
        s = clipboard_get_text();
        clipboard_set_text(string(s) + string(ds_list_write(temp)));
        ds_list_destroy(temp);
        file_text_close(f);
    }
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //audio_stop_sound(res_bgm_mainmenu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (state_index == stateMainMenu_PressStart) {
        DrawFooter(VERSION);
        DrawCanvas(320 - 128, 256, 256, 48);

        draw_set_colour(c_black);
        draw_set_font(Font_H1);
        draw_set_halign(fa_center);
        draw_text(320, 100, "SIDON");
        draw_set_font(Font_P);
        draw_text(320, 274, "Press [Start]");
        draw_set_halign(fa_left);
    }

    if (state_index == stateMainMenu_Update) {
        draw_set_colour(c_black);
        draw_set_font(Font_H1);
        draw_set_halign(fa_center);
        draw_text(320, 100, "SIDON");
        draw_set_halign(fa_left);

        DrawMenu(320 - 64, 184, 128, ds_list_size(theMenu), theChoice, "Main Menu");

        if (myInput == myKeyboard) {
            DrawFooter("[^/`] Cycle / [Z] Select / [X] Cancel");
        } else {
            DrawFooter("[^/`] Cycle / [A] Select / [B] Cancel");
        }

        var i;

        for (i=0; i&lt;ds_list_size(theMenu); i++) {
            draw_set_colour(c_gray);
            if (theChoice == i) {
                draw_set_colour(c_black);
            }
            draw_text(320 - 64 + 20, 184 + 24 + 16 * (i + 1), theMenu[| i]);
        }
    }

    if (state_index == stateMainMenu_Credits) {
        //draw_set_alpha(0.5);
        draw_set_colour(c_black);
        draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
        //draw_set_alpha(1);

        draw_set_colour(c_gray);
        draw_text(64, 64, "Art");
        draw_text(64, 64 + 24, "Music");
        draw_text(64, 64 + 48, "Sound");
        draw_text(64, 64 + 72, "Created by");
        //draw_text(64, 64 + 96, "Special Thanks to");
        draw_text(64, 64 + 136, "Dedicated to");

        draw_set_colour(c_white);
        draw_text(64, 32, "Credits");
        draw_text(64 + 144, 64, "...");
        draw_text(64 + 144, 64 + 24, "Anika L. Ahmed");
        draw_text(64 + 144, 64 + 48, "... @Sound Designer");
        draw_text(64 + 144, 64 + 72, "Sajid Sarker");
        draw_text(64 + 144, 64 + 88, "Shafin Rahman");
        draw_text(64 + 144, 64 + 106, "Ruban Noel");
        draw_text(64 + 144, 64 + 136, "Saraa Ajmy");
        draw_text(64 + 144, 64 + 152, "Sifat Hossain");
        draw_text(64 + 144, 64 + 176, "Copyright MMXVII by Sajid Sarker.");

        /*
        DrawHeading(64, 32, 128, "Credits", true);
        DrawString(64, 64, 144, "Art", "...");
        DrawString(64, 64 + 24, 144, "Music", "Anika L. Ahmed");
        DrawString(64, 64 + 48, 144, "Sound", "...");
        DrawString(64, 64 + 72, 144, "Created by", "Sajid Sarker");
        DrawString(64, 64 + 96, 144, "Special Thanks to", "...");
        DrawString(64, 64 + 112, 144, "", "...");
        DrawString(64, 64 + 136, 144, "Dedicated to", "Tasnia Iqbal");
        DrawString(64, 64 + 152, 144, "", "...");
        DrawString(64, 64 + 176, 144, "", "Copyright MMXVII by Sajid Sarker.");
        */

        if (myInput == myKeyboard) {
            DrawFooter("[X] Return to Main Menu");
        } else {
            DrawFooter("[B] Return to Main Menu");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
